//
//  QuizBrain.swift
//  WatchChainIOS
//
//  Created by Alexej K on 20.05.24.
//

import Foundation

struct QuizBrain {
    
    var questionNumber = 0
    var score = 0
    
    let quiz = [
        Question(q: "Can you sell NFTs after buying them?", a: "YES"),
        Question(q: "Are cryptocurrencies controlled by a central authority like a government?", a: "NO"),
        Question(q: "Are all NFTs unique and non-fungible?", a: "YES"),
        Question(q: "Can Bitcoin be used as a payment method in some stores?", a: "YES"),
        Question(q: "Are there cryptocurrencies backed by physical assets?", a: "YES"),
        Question(q: "Are cryptocurrency transactions anonymous?", a: "YES"),
        Question(q: "Do you need a special digital wallet to store cryptocurrencies?", a: "YES"),
        Question(q: "Can NFTs only be created on a specific blockchain platform?", a: "NO"),
        Question(q: "Are cryptocurrencies immune to inflation?", a: "NO"),
        Question(q: "Can NFTs represent digital artworks?", a: "YES"),
        Question(q: "Is it possible to exchange cryptocurrencies for fiat currencies like the US Dollar?", a: "YES"),
        Question(q: "Are all cryptocurrencies based on the proof-of-work mechanism?", a: "NO"),
        Question(q: "Do you have to pay taxes on profits from selling cryptocurrencies?", a: "YES"),
        Question(q: "Can NFTs grant access to exclusive content or events?", a: "YES"),
        Question(q: "Are all cryptocurrencies generated by the same algorithm?", a: "NO"),
        Question(q: "Can NFTs also represent physical items?", a: "YES"),
        Question(q: "Is it possible to generate cryptocurrencies through mining?", a: "YES"),
        Question(q: "Can you buy cryptocurrencies directly through traditional banks?", a: "NO"),
        Question(q: "Are all NFTs worth the same amount?", a: "NO"),
        Question(q: "Can cryptocurrencies be traded on exchanges like stocks?", a: "YES")
    ]
    
    func getQuestionText() -> String {
        return quiz[questionNumber].text
    }
    
    func getProgress() -> Float {
        return Float(questionNumber) / Float(quiz.count)
    }
    
    mutating func getScore() -> Int {
        return score
    }
    
     mutating func nextQuestion() {
        
        if questionNumber + 1 < quiz.count {
            questionNumber += 1
        } else {
            questionNumber = 0
        }
    }
    
    mutating func checkAnswer(userAnswer: String) -> Bool {
        if userAnswer == quiz[questionNumber].answer {
            score += 1
            return true
        } else {
            return false
        }
    }
}
